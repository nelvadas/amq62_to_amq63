---
# This playbook is used to create k8s cronjob in project namespaces
   #  Usage  ansible-playbook -i hosts upgrate_amq62_to_amq63.yaml
   #                       -e "namespace=myProject" \
   #                       -e "image=d1g1tal/lmde:dev" \
   #                       -e "buildConfig=mybc" \
   #                       -e "deploymentConfig=dc"
   #		           -e "createDrainer=false"
   #                       -e "oc_cluster=https://mycluster:8443"
   #                       -e "oc_user=admin"
   #                       -e "oc_password=admin"
  # Sample command line
  #         ansible-playbook -i hosts  upgrate_amq62_to_amq63.yaml -e namespace=myProject -e buildConfig=test-bc -e deploymentConfig=test-dc -e image='jboss-amq-63:1.1' \
  #
- hosts: localhost
  vars:
    ocp_cluster: "{{oc_cluster|default('https://192.168.99.100:8443')}}"
    ocp_cluster_user: "{{oc_user|default('admin')}}"
    ocp_cluster_pwd: "{{oc_password|default('admin')}}"
    tmp_dir:  "./tmp/{{namespace}}/{{ansible_date_time.epoch}}"
  tasks:

  - name: "Check project namespace "
    fail:
      msg: " project namespace is mandatory: -e namespace=xxx"
    when: namespace is not defined

  - name: "Check Build and Deployment Config"
    fail:
      msg: " Please specify the build and deployment config you want to update"
    when: (deploymentConfig is not defined )or ( buildConfig is not defined) 
 
  - name: "oc login "
    command: "oc login {{ocp_cluster}} -u {{ocp_cluster_user}} -p {{ocp_cluster_pwd}}  -n {{namespace}}"
    register: result
        

  - name: "Ensure objects exists in project {{namespace}} "
    command: " oc get {{ item }} -n {{namespace}}  "
    register: oc_get_obj
    failed_when: "'No resources found' in oc_get_obj.stderr"
    with_items:
     - "dc/{{deploymentConfig}}"
     - "bc/{{buildConfig}}"

  - name: "Create Backup {{tmp_dir}} directory"
    file:
      path: "{{tmp_dir}}"
      state: directory
  

  - name: "Back up existing objects before patching "
    shell: " oc get {{ item.kind }}/{{ item.name }} -n {{namespace}} -o yaml  > {{tmp_dir}}/{{ item.kind }}_{{ item.name }}.yaml"
    register: oc_backup
    failed_when: "'No resources found' in oc_backup.stderr"
    with_items:
      - { name: "{{deploymentConfig}}", kind: "dc"}
      - { name: "{{ buildConfig}}",kind: "bc"}

  - name: "Patching the Build config with new AMQ Version "
    shell: "./scripts/patchBuildConfig.sh {{buildConfig}} '{{image}}' {{namespace}}"
    register: oc_patch_bc_result
